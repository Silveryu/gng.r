% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/gng.R
\name{GNG}
\alias{GNG}
\title{Constructor of GrowingNeuralGas object. Can be used to train offline, or online.}
\usage{
GNG(x = NULL, labels = c(), beta = 0.99, alpha = 0.5,
  max.nodes = 1000, eps.n = 6e-04, eps.w = 0.05, max.edge.age = 200,
  training = gng.train.offline(), lambda = 200, verbosity = 0, k = NULL)
}
\arguments{
\item{beta}{coefficient. Decrease the error variables of all node nodes by this fraction. Forgetting rate. Default 0.99}

\item{alpha}{Alpha coefficient. Decrease the error variables of the nodes neighboring to the newly inserted node by this fraction. Default 0.5}

\item{max.nodes}{Maximum number of nodes (after reaching this size it will continue running, but won't add new nodes)}

\item{eps.n}{Default 0.0006. How strongly adapt neighbour node}

\item{eps.w}{Default 0.05. How strongly adapt winning node}

\item{training}{Can be either gng.train.offline(max.iter, min.improvement), or gng.train.online()}

\item{lambda}{Every lambda iteration is added new vertex. Default 200}

\item{k}{Utility constant, by default turned off. Good value is 1.3. Constant controlling speed of erasing obsolete nodes, see http://sund.de/netze/applets/gng/full/tex/DemoGNG/node20.html}
}
\description{
Construct GNG object
}
\examples{
data(wine, package="rattle")
scaled.wine <- scale(wine[-1])
# Train in an offline manner
gng <- GNG(scaled.wine, labels=wine$Type, max.nodes=20)
# Plot
plot(gng, mode=gng.plot.2d.cluster)

# Train in an online manner with utility (erasing obsolete nodes)
gng <- GNG(scaled.wine, labels=wine$Type, max.nodes=20, training=gng.train.online(), k=1.3)
insertExamples(gng, scale(wine[-1])
run(gng)
Sys.sleep(10)
terminate(gng)
# Plot
plot(gng, mode=gng.plot.2d.cluster)
}

