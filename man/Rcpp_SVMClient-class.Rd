% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/svm.R
\docType{class}
\name{Rcpp_SVMClient-class}
\alias{Rcpp_SVMClient-class}
\title{Class Rcpp_SVMClient.}
\description{
Class \code{Rcpp_SVMClient} defines a SVM model class.
}
\section{Methods}{

\describe{
\item{\code{alpha()}}{arma::Col<double> alpha()}

\item{\code{areExamplesWeighted()}}{bool areExamplesWeighted()}

\item{\code{bias()}}{double bias()}

\item{\code{C()}}{double C()}

\item{\code{cache()}}{double cache()}

\item{\code{coef0()}}{double coef0()}

\item{\code{core()}}{std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > core()}

\item{\code{degree()}}{int degree()}

\item{\code{gamma()}}{double gamma()}

\item{\code{getClassWeights()}}{arma::Col<double> getClassWeights()}

\item{\code{getEps()}}{double getEps()}

\item{\code{getExampleWeights()}}{arma::Col<double> getExampleWeights()}

\item{\code{getIterations()}}{int getIterations()}

\item{\code{getNumberClass()}}{int getNumberClass()}

\item{\code{getNumberSV()}}{int getNumberSV()}

\item{\code{getSV()}}{arma::SpMat<double> getSV()}

\item{\code{isProbability()}}{bool isProbability()}

\item{\code{isShrinking()}}{bool isShrinking()}

\item{\code{isSparse()}}{bool isSparse()}

\item{\code{kernel()}}{std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > kernel()}

\item{\code{prep()}}{std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > prep()}

\item{\code{setAlpha(...)}}{void setAlpha(arma::Col<double>)}

\item{\code{setBias(...)}}{void setBias(double)}

\item{\code{setC(...)}}{void setC(double)}

\item{\code{setCache(...)}}{void setCache(double)}

\item{\code{setCoef0(...)}}{void setCoef0(double)}

\item{\code{setDegree(...)}}{void setDegree(int)}

\item{\code{setEps(...)}}{void setEps(double)}

\item{\code{setGamma(...)}}{void setGamma(double)}

\item{\code{setKernel(...)}}{void setKernel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)}

\item{\code{setLibrary(...)}}{void setLibrary(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)}

\item{\code{setPreprocess(...)}}{void setPreprocess(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)}

\item{\code{setProbability(...)}}{void setProbability(int)}

\item{\code{setShrinking(...)}}{void setShrinking(int)}

\item{\code{setW(...)}}{void setW(arma::Col<double>)}

\item{\code{train()}}{void train()}

\item{\code{w()}}{arma::Col<double> w()}
}}

